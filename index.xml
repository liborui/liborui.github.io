<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Borui Li on Borui Li</title>
    <link>https://liborui.github.io/</link>
    <description>Recent content in Borui Li on Borui Li</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>SEC&#39;18 paper abstraction</title>
      <link>https://liborui.github.io/post/20190117-sec18/</link>
      <pubDate>Thu, 17 Jan 2019 22:23:00 +0800</pubDate>
      
      <guid>https://liborui.github.io/post/20190117-sec18/</guid>
      <description>

&lt;h1 id=&#34;sec-18&#34;&gt;SEC&amp;rsquo;18&lt;/h1&gt;

&lt;h2 id=&#34;supporting-edge-applications&#34;&gt;Supporting Edge Applications&lt;/h2&gt;

&lt;h4 id=&#34;muvr-supporting-multi-user-mobile-virtual-reality-with-resource-constrained-edge-cloud&#34;&gt;MUVR: Supporting Multi-User Mobile Virtual Reality with Resource Constrained Edge Cloud&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Yong Li (University of Tennessee at Knoxville, USA), Wei Gao (University of Pittsburgh, USA)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;背景：
VR应用在边缘设备上渲染有计算性能和带宽受限的问题。&lt;/p&gt;

&lt;p&gt;解决方案概述：
通过VR帧之间的redundancy，可以在边缘设备上缓存+重用，并且只传输不同的信息，以解决性能和带宽问题。
在安卓+unity vr上做了实现。&lt;/p&gt;

&lt;h4 id=&#34;safeshareride-edge-based-attack-detection-in-ridesharing-services&#34;&gt;SafeShareRide: Edge-Based Attack Detection in Ridesharing Services&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Liangkai Liu (Wayne State University), Xingzhou Zhang (Wayne State University; Institute of Computing Technology, Chinese Academy of Sciences), Mu Qiao (IBM Research - Almaden), Weisong Shi (Wayne State University)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;背景：
在共享服务（uber、didi）中保护乘客安全，需要车内视频和其他信息处理。&lt;/p&gt;

&lt;p&gt;解决方案概述：
提出了一个基于边缘计算的共享汽车不安全事件检测系统，装在司机和乘客手机上。
通过语音识别、驾驶行为检测→检测到特殊事件→触发视频录制和处理（移动端压缩，云端分析），以判断乘客的处境&lt;/p&gt;

&lt;h4 id=&#34;cavbench-a-benchmark-suite-for-connected-and-autonomous-vehicles&#34;&gt;CAVBench: A Benchmark Suite for Connected and Autonomous Vehicles&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Yifan Wang (Institute of Computing Technology, CAS, China), Shaoshan Liu (PerceptIn, USA), Xiaopei Wu (Wayne State University, USA), Weisong Shi (Wayne State University, USA)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;背景：
CAV: connected autonomous vehicle。
CAV研究中仍旧没有一个统一的benchmark，妨碍了研究的发展。&lt;/p&gt;

&lt;p&gt;解决方案概述：
CAVBench是一个测试CAV应用的系统。
它建立了一个包含6个典型应用作为workload（定位、物体检测、物体追踪、电池诊断、音频识别和边缘视频分析），囊括了4个主要cav场景（自动驾驶，实时诊断、车内信息与娱乐的数据传输和支持第三方应用），使用4个数据集（包含图片、视频、音频和文本）的数据集。
输出有两个：一是包含应用专属的度量，如运行时间的breakdown，可以帮助开发者查看自已应用的瓶颈；还有一个叫做QoS-resource utilization曲线，来看被测应用于被测CAV平台的效率与适配程度。&lt;/p&gt;

&lt;p&gt;得到一些insight：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;应用的操作密度很极性（polarized）→异构计算平台对CAV很重要&lt;/li&gt;
&lt;li&gt;应用的带宽消耗很大→需要高带宽支持或有效的带宽管理机制&lt;/li&gt;
&lt;li&gt;一些应用的data/instruction locality很差→cache miss很多→以后在CAV应用中需要优化cache机制(locality-局部性：CPU访问存储器时，无论是存取指令还是存取数据，所访问的存储单元都趋于聚集在一个较小的连续区域中)&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;qoe-inference-and-improvement-without-end-host-control&#34;&gt;QoE Inference and Improvement Without End-Host Control&lt;/h4&gt;

&lt;p&gt;Ashkan Nikravesh (University of Michigan, USA), Qi Alfred Chen (University of California, Irvine, USA), Scott Haseley (University of Illinois at Urbana-Champaign, USA), Xiao Zhu (University of Michigan, USA), Geoffrey Challen (University of Illinois at Urbana-Champaign, USA), Z. Morley Mao (University of Michigan, USA)&lt;/p&gt;

&lt;p&gt;背景：
很多时候QoS不能直接推导到QoE。如运营商的流量控制调整QoS，不一定反映在终端用户的QoE中。
有一些场景QoS是知道的，如何得到QoE？&lt;/p&gt;

&lt;p&gt;解决方案概述：
提出了一个离线的给每个被测APP建立QoE-QoS mapping模型的方法（给每个APP建一个JSON，里面包含了它如何使用的信息），还有如何利用这个模型来优化QoE-aware traffic management的方法&lt;/p&gt;

&lt;p&gt;结果：
提高了视频的响应性和视频帧率&lt;/p&gt;

&lt;h2 id=&#34;session-ii-privacy-and-security&#34;&gt;Session II: Privacy and Security&lt;/h2&gt;

&lt;h4 id=&#34;homepad-a-privacy-aware-smart-hub-for-home-environments&#34;&gt;HomePad: A Privacy-Aware Smart Hub for Home Environments&lt;/h4&gt;

&lt;p&gt;Igor Zavalyshyn (INESC-ID / Instituto Superior Técnico, University of Lisbon), Nuno O. Duarte (INESC-ID / Instituto Superior Técnico, University of Lisbon), Nuno Santos (INESC-ID / Instituto Superior Técnico, University of Lisbon)&lt;/p&gt;

&lt;p&gt;背景：
智能家居设备有隐私安全问题，用户可能在不知情的情况下隐私数据就被app使用了。&lt;/p&gt;

&lt;p&gt;解决方案概述：&lt;/p&gt;

&lt;p&gt;homepad是一个隐私敏感的智能家居hub（所有的设备都连接在hub上），它可以&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;用户使用prolog来声明元素有向图来规定隐私数据的允许流向（白名单？）&lt;/li&gt;
&lt;li&gt;检测用户的隐私策略与应用数据流向的不同（使用一些软件工程的方法）&lt;/li&gt;
&lt;li&gt;如有不同则拒绝访问&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;vigilia-securing-smart-home-edge-computing&#34;&gt;Vigilia: Securing Smart Home Edge Computing&lt;/h4&gt;

&lt;p&gt;Rahmadi Trimananda (University of California, Irvine, USA), Ali Younis (University of California, Irvine, USA), Bojun Wang (University of California, Irvine, USA), Bin Xu (University of California, Irvine, USA), Brian Demsky (University of California, Irvine, USA), Guoqing Xu (University of California, Los Angeles, USA)&lt;/p&gt;

&lt;p&gt;背景：
现在有很多智能家居hub，但是容易受到攻击&lt;/p&gt;

&lt;p&gt;解决方案概述：
vigilia实现了一个java中的新语法（@config），让开发者在写APP的时候就声明他它所需要的权限，然后再编译时将其转化为路由器上的规则，通过不同设备的网络权限管理来减轻受攻击面。&lt;/p&gt;

&lt;h4 id=&#34;learning-from-differentially-private-neural-activations-with-edge-computing&#34;&gt;Learning from Differentially Private Neural Activations with Edge Computing&lt;/h4&gt;

&lt;p&gt;Yunlong Mao (Nanjing University), Shanhe Yi (College of William &amp;amp; Mary), Qun Li (College of William &amp;amp; Mary), Jinghao Feng (Nanjing University), Fengyuan Xu (Nanjing University), Sheng Zhong (Nanjing University)&lt;/p&gt;

&lt;p&gt;背景：
用户想要使用自己创建的数据集来训练人脸识别算法，移动设备是不能训练的，但直接放在云端训练又会泄露隐私&lt;/p&gt;

&lt;p&gt;解决方案概述：
使用差分隐私机制来保护训练的安全
在训练时，神经网络被使用特殊的方法在用户端和云端切开，来保证在数据上和参数上的隐私都是受到保护的&lt;/p&gt;

&lt;h4 id=&#34;harpocrates-giving-out-your-secrets-and-keeping-them-too&#34;&gt;Harpocrates: Giving Out Your Secrets and Keeping Them Too&lt;/h4&gt;

&lt;p&gt;Rufaida Ahmed (University of Utah), Zirak Zaheer (University of Utah), Richard Li (University of Utah), Robert Ricci (University of Utah)&lt;/p&gt;

&lt;p&gt;背景：&lt;/p&gt;

&lt;p&gt;CDN被用来cache静态数据，那么动态数据和算法可以用无服务器计算的方式下发到CDN上，那么就会出现&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;函数中有隐私key可能会暴露&lt;/li&gt;
&lt;li&gt;计算可能没有如云想象的那样执行（如代码被篡改）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;解决方案概述：
harpocrates就是讲active code从云下发到边的一个框架，它使用了SGX技术来保证数据和代码隐私；
并使用了JavaScript WebWorker API来简化代码流程，让代码可以在云端和边缘跑；
并且设计了一些应用使用harpocrates。&lt;/p&gt;

&lt;h2 id=&#34;session-iii-video-at-the-edge&#34;&gt;Session III: Video at the Edge&lt;/h2&gt;

&lt;h4 id=&#34;videoedge-processing-camera-streams-using-hierarchical-clusters&#34;&gt;VideoEdge: Processing Camera Streams using Hierarchical Clusters&lt;/h4&gt;

&lt;p&gt;Chien-Chun Hung (University of Southern California), Ganesh Ananthanarayanan (Microsoft Research), Peter Bodik (Microsoft Research), Leana Golubchik (University of Southern California), Minlan Yu (Harvard University), Paramvir Bahl (Microsoft Research), Matthai Philipose (Microsoft Research)&lt;/p&gt;

&lt;p&gt;背景：
在视频边缘计算处理中，处理的设备往往是分层部署的，计算是分步骤进行的（如物体识别→物体追踪……），而计算的精度和开销也可以通过一些参数来调整（帧率，分辨率等）。
如何挑选一套最好的计算步骤的排布和挑选一个最合适的视频录制参数是个问题。&lt;/p&gt;

&lt;p&gt;解决方案概述：
这篇文章通过将这个问题formulate成为一个多选择多维度背包问题，并针对这个数学问题提出一个启发式算法来改进算法实时性来很好的解决上述问题。&lt;/p&gt;

&lt;h4 id=&#34;application-aware-iot-camera-virtualization-for-video-analytics-edge-computing&#34;&gt;Application-Aware IoT Camera Virtualization for Video Analytics Edge Computing&lt;/h4&gt;

&lt;p&gt;Si Young Jang (KAIST), Yoonhyung Lee (KAIST), Byoungheon Shin (KAIST), Dongman Lee (KAIST)&lt;/p&gt;

&lt;p&gt;背景：现在边缘设备上的摄像头只能服务于一个应用&lt;/p&gt;

&lt;p&gt;解决方案概述：
提出了一个“ontology-based application description model”来虚拟化摄像头，使得应用与摄像头解耦。
并且提出了一个摄像头重设置机制来动态的调整摄像头的参数以应对环境（如亮度）的改变
实验结果说明其在环境变化是摄像头参数的重设置速度是以前的2.8倍&lt;/p&gt;

&lt;h4 id=&#34;edge-based-discovery-of-training-data-for-machine-learning&#34;&gt;Edge-Based Discovery of Training Data for Machine Learning&lt;/h4&gt;

&lt;p&gt;Ziqiang Feng (Carnegie Mellon University, USA), Shilpa George (Carnegie Mellon University, USA), Jan Harkes (Carnegie Mellon University, USA), Padmanabhan Pillai (Intel Labs, USA), Roberta Klatzky (Carnegie Mellon University, USA), Mahadev Satyanarayanan (Carnegie Mellon University, USA)&lt;/p&gt;

&lt;p&gt;背景：
如何从元数据生成一个足够大的带标注的训练数据集是一个很大的问题，但是标注数据很多时候需要领域知识，这就造成了人力不够的问题。&lt;/p&gt;

&lt;p&gt;解决方案概述：
针对训练数据生成的问题，这篇文章针对来源于网络的各种不同的数据（如视频、音频……），通过在边缘设备上提前丢掉一些与标注不相关的数据可以显著提高一个专家来生成训练数据集效率
将专家的注意力作为最关键的优化指标。本文提出了Eureca，一个使用了边缘计算的可交互式系统来极大的提高专家人员生成训练数据集的效率。
（这篇paper需要再看一下，没看懂）&lt;/p&gt;

&lt;h4 id=&#34;bandwidth-efficient-live-video-analytics-for-drones-via-edge-computing&#34;&gt;Bandwidth-Efficient Live Video Analytics for Drones Via Edge Computing&lt;/h4&gt;

&lt;p&gt;Junjue Wang (Carnegie Mellon University), Ziqiang Feng (Carnegie Mellon University), Zhuo Chen (Carnegie Mellon University), Shilpa George (Carnegie Mellon University), Mihir Bala (University of Michigan), Padmanabhan Pillai (Intel Labs), Shao-Wen Yang (Intel Labs), Mahadev Satyanarayanan (Carnegie Mellon University)&lt;/p&gt;

&lt;p&gt;背景：&lt;/p&gt;

&lt;p&gt;使用无人机来进行视频监控会遇到无线带宽、能耗、精确度和结果实时性的问题。&lt;/p&gt;

&lt;p&gt;解决方案概述：&lt;/p&gt;

&lt;p&gt;本文提出了四个策略，来让基于无人机的和基于边缘设备的视频共同处理能够节省带宽，提高scalability：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;early-discard&lt;/li&gt;
&lt;li&gt;just-in-time-learning&lt;/li&gt;
&lt;li&gt;reachback&lt;/li&gt;
&lt;li&gt;context-aware&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;session-iv-edge-computing-and-iot&#34;&gt;Session IV: Edge Computing and IoT&lt;/h2&gt;

&lt;h4 id=&#34;aggio-a-coupon-safe-for-privacy-preserving-smart-retail-environments&#34;&gt;Aggio: A Coupon Safe for Privacy-Preserving Smart Retail Environments&lt;/h4&gt;

&lt;p&gt;Albert Harris (University of Illinois at Urbana-Champaign), Robin Snader (Athetized Networks), Robin Kravets (University of Illinois at Urbana-Champaign)&lt;/p&gt;

&lt;p&gt;背景：&lt;/p&gt;

&lt;p&gt;电子化的超市非常吸引人→如果用户靠近商品的时候显示该商品的电子优惠券是非常好的商业行为&lt;/p&gt;

&lt;p&gt;解决方案概述：&lt;/p&gt;

&lt;p&gt;Aggio：一个基于边缘计算的优惠券分发系统。
它主要使用了密码学算法来保证：安全性、用户组（会员等级）的控制并由此减少通讯量。
&lt;img src=&#34;evernotecid://80F292E1-A2A6-40BA-A466-FD4D080733C1/appyinxiangcom/18868366/ENResource/p8355&#34; alt=&#34;2b909162fa1d0eb491bdb3209c7cf6c0.png&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;from-cell-towers-to-smart-street-lamps-placing-cloudlets-on-existing-urban-infrastructures&#34;&gt;From Cell Towers to Smart Street Lamps: Placing Cloudlets on Existing Urban Infrastructures&lt;/h4&gt;

&lt;p&gt;Julien Gedeon (Technische Universität Darmstadt, Germany), Michael Stein (Technische Universität Darmstadt, Germany), Jeff Krisztinkovics (Technische Universität Darmstadt, Germany), Patrick Felka (Goethe-Universität Frankfurt am Main), Katharina Keller (Goethe-Universität Frankfurt am Main), Christian Meurisch (Technische Universität Darmstadt, Germany), Lin Wang (Technische Universität Darmstadt, Germany), Max Mühlhäuser (Technische Universität Darmstadt, Germany)&lt;/p&gt;

&lt;p&gt;背景：&lt;/p&gt;

&lt;p&gt;研究边缘计算设备在真实城市中的基础设施上（电信基站、商用路由器和智能路灯）的部署问题。&lt;/p&gt;

&lt;p&gt;解决方案概述：&lt;/p&gt;

&lt;p&gt;贡献1：基于一个城市的基础设施位置信息和两个移动应用得到的移动路径信息来对城市级别的边缘节点的部署可能性，并得到一些insight
贡献2：提出了一个充分考虑设备异构性（通信距离，资源大小，价格）的部署算法，以达到用户QoE和部署价格的tradeoff&lt;/p&gt;

&lt;h4 id=&#34;in-situ-resource-provisioning-with-adaptive-scale-out-for-regional-iot-services&#34;&gt;In-Situ Resource Provisioning with Adaptive Scale-out for Regional IoT Services&lt;/h4&gt;

&lt;p&gt;Yugo Nakamura (Nara Institute of Science and Technology, Japan), Teruhiro Mizumoto (Nara Institute of Science and Technology, Japan), Hirohiko Suwa (Nara Institute of Science and Technology), Yutaka Arakawa (Nara Institute of Science and Technology, Japan), Hirozumi Yamaguchi (Osaka University, Japan), Keiichi Yasumoto (Nara Institute of Science and Technology, Japan)&lt;/p&gt;

&lt;p&gt;背景：&lt;/p&gt;

&lt;p&gt;区域性的IoT服务：及时返回给用户时空信息的查询结果（如景区内导航与讲解）
区域IoT服务需要按需分配资源，但是IoT设备通常是异构的（计算能力，网络情况，部署密度），如何在满足实时性的条件下，基于服务的资源需求来按需分配计算资源是（deRISP问题）困难的。&lt;/p&gt;

&lt;p&gt;解决方案概述：&lt;/p&gt;

&lt;p&gt;针对上述问题本文formulate并给出了算法，进一步，针对面对变化的需求是如何调整分配方法（deRISP+）的问题也提出了一个在线的资源供给方法基于禁忌搜索（tabu search）的计算调度算法。&lt;/p&gt;

&lt;h4 id=&#34;scalable-edge-computing-for-low-latency-data-dissemination-in-topic-based-publish-subscribe&#34;&gt;Scalable Edge Computing for Low Latency Data Dissemination in Topic-Based Publish/Subscribe&lt;/h4&gt;

&lt;p&gt;Shweta Khare (Vanderbilt University), Hongyang Sun (Vanderbilt University), Kaiwen Zhang (Ecole de technologie sup´erieure), Julien Gascon-Samson (University of British Columbia), Aniruddha Gokhale (Vanderbilt University), Xenofon Koutsoukos (Vanderbilt University), Hamzah Abdelaziz (Vanderbilt University)&lt;/p&gt;

&lt;p&gt;背景：&lt;/p&gt;

&lt;p&gt;物联网数据通常在端收集，边缘处理后对端设备进行控制，这样就形成了一个闭环，也恰好符合发布-订阅模型。
为了满足服务的实时性要求，本文提出了一个边缘计算系统来作为发布-订阅模式的broker，来平衡发布与处理的负载，并且能够保证消息发布延迟的qos达到用户要求。&lt;/p&gt;

&lt;p&gt;解决方案概述：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;使用敏感分析法分析了发布频率、订阅者数量、单消息处理时间和背景负载对于延迟的影响&lt;/li&gt;
&lt;li&gt;一个延迟预测模型&lt;/li&gt;
&lt;li&gt;对于k个topic如何选择最小数量的broker进行排布就可以满足用户延迟要求的formulation和解法&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;session-v-infrastructure-and-placement&#34;&gt;Session V: Infrastructure and Placement&lt;/h2&gt;

&lt;h4 id=&#34;dependency-mining-for-service-resilience-at-the-edge&#34;&gt;Dependency Mining for Service Resilience at the Edge&lt;/h4&gt;

&lt;p&gt;Atakan Aral (Vienna University of Technology, Austria), Ivona Brandic (Vienna University of Technology, Austria)&lt;/p&gt;

&lt;p&gt;背景：
边缘计算是用稳定性来换取低延迟和grographical prevalence，因此对于边缘系统的failure的适应能力需要进行一个很好的建模&lt;/p&gt;

&lt;p&gt;解决方案概述：
本文&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;通过分析历史failure数据、使用动态贝叶斯网络建立时间相关性模型对多个边缘节点同时failure的概率进行建模&lt;/li&gt;
&lt;li&gt;提出了两种边缘计算中的replica算法来优化failure概率或redundancy代价。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;（看起来就是云计算的人直接过来搬到边缘端在做一遍）&lt;/p&gt;

&lt;h4 id=&#34;cooperative-competitive-task-allocation-in-edge-computing-for-delay-sensitive-social-sensing&#34;&gt;Cooperative-Competitive Task Allocation in Edge Computing for Delay-Sensitive Social Sensing&lt;/h4&gt;

&lt;p&gt;Daniel (Yue) Zhang (University of Notre Dame), Yue Ma (University of Notre Dame), Chao Zheng (University of Notre Dame), Yang Zhang (University of Notre Dame), X. Sharon Hu (University of Notre Dame), Dong Wang (University of Notre Dame)&lt;/p&gt;

&lt;p&gt;背景：
边缘设备之间的互相协作有如下几个背景：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;彼此之间任务目标可能会冲突&lt;/li&gt;
&lt;li&gt;彼此之间不肯互相协作，因为各有各的任务，还有隐私问题&lt;/li&gt;
&lt;li&gt;边缘设备的可用资源量随时间一直变化&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;解决方案概述：
为了解决这些问题，本文提出了一个基于博弈论的任务分配框架来满足任务的延迟需求，它主要有：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;动态反馈刺激&lt;/li&gt;
&lt;li&gt;去中心化的沟通机制&lt;/li&gt;
&lt;li&gt;审慎的支付函数（payoff，博弈论名词）&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;portable-energy-aware-cluster-based-edge-computers&#34;&gt;Portable Energy-Aware Cluster-Based Edge Computers&lt;/h4&gt;

&lt;p&gt;Thomas Rausch (TU Wien), Cosmin Avasalcai (TU Wien), Schahram Dustdar (TU Wien)
背景：
边缘计算，计算为核心。但是边缘计算设备并不是非常常见&lt;/p&gt;

&lt;p&gt;解决方案概述：
设计了一个基于集群的便携式的边缘计算设备，有以下两个特点：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;energy-aware&lt;/li&gt;
&lt;li&gt;cluster-based→load balancing&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;（可以看看）&lt;/p&gt;

&lt;h4 id=&#34;f-mstorm-feedback-based-online-distributed-mobile-stream-processing&#34;&gt;F-MStorm: Feedback-Based Online Distributed Mobile Stream Processing&lt;/h4&gt;

&lt;p&gt;Mengyuan Chao (Texas A&amp;amp;M University, USA), Chen Yang (Texas A&amp;amp;M University, USA), Yukun Zeng (Texas A&amp;amp;M University), Radu Stoleru (Texas A&amp;amp;M University)&lt;/p&gt;

&lt;p&gt;背景：&lt;/p&gt;

&lt;p&gt;现有的移动端流式数据分布式处理框架为MStorm，但它是静态设置和调度的，效率不高&lt;/p&gt;

&lt;p&gt;解决方案概述：&lt;/p&gt;

&lt;p&gt;本文提出了F-MStorm，一个基于反馈的在线分布式移动流处理系统，使用反馈调整的机制来动态调整设置、调度和运行等级。
在安卓上实现出来了。&lt;/p&gt;

&lt;h2 id=&#34;session-vi-edge-cloud-interactions&#34;&gt;Session VI: Edge-Cloud Interactions&lt;/h2&gt;

&lt;h4 id=&#34;scalability-and-performance-evaluation-of-edge-cloud-systems-for-latency-constrained-applications&#34;&gt;Scalability and Performance Evaluation of Edge Cloud Systems for Latency Constrained Applications&lt;/h4&gt;

&lt;p&gt;Sumit Maheshwari (Rutgers University, USA), Dipankar Raychaudhuri (Rutgers University, USA), Ivan Seskar (Rutgers University, USA), Francesco Bronzino (Inria, France)&lt;/p&gt;

&lt;p&gt;使用城市（芝加哥）中的边缘计算设备（AP）的部署位置和带宽等数据来分必须云-边计算系统的性能与可扩展性。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;单云系统比边间带宽低的单边系统性能更好&lt;/li&gt;
&lt;li&gt;如果边有足够的计算资源且边间带宽较大，那么会有一个云边任务分配算法来达到全局最优&lt;/li&gt;
&lt;li&gt;不提高带宽只增加边缘设备的数量只会造成网络更加拥挤，降低系统性能&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;costless-optimizing-cost-of-serverless-computing-through-function-fusion-and-placement&#34;&gt;Costless: Optimizing Cost of Serverless Computing through Function Fusion and Placement&lt;/h4&gt;

&lt;p&gt;Tarek Elgamal (University of Illinois Urbana champaign)&lt;/p&gt;

&lt;p&gt;背景：
无服务器计算最近比较流行，因为它不需要管理计算底层的资源，只需要关注代码逻辑的开发。但是它的计费方式和云计算不一样（使用调用次数和占用资源一起计费）&lt;/p&gt;

&lt;p&gt;解决方案概述：&lt;/p&gt;

&lt;p&gt;本文针对AWS Lambda（一个较为成熟的无服务器计算服务），提出了一个可以通过优化&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;函数融合&lt;/li&gt;
&lt;li&gt;将函数分配到云和边的调度&lt;/li&gt;
&lt;li&gt;分配给每个函数内存&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;来获得最优的价格&lt;/p&gt;

&lt;h4 id=&#34;an-envy-free-auction-mechanism-for-resource-allocation-in-edge-computing-systems&#34;&gt;An Envy-Free Auction Mechanism for Resource Allocation in Edge Computing Systems&lt;/h4&gt;

&lt;p&gt;Tayebeh Bahreini (Wayne State University, USA), Hossein Badri (Wayne State University, USA), Daniel Grosu (Wayne State University, USA)&lt;/p&gt;

&lt;p&gt;背景：&lt;/p&gt;

&lt;p&gt;在边缘计算场景中，如何为云、边服务合适的定价来最大化效益是一个很重要的问题，一个较好的解决方案就是使用竞价机制（拍卖）。&lt;/p&gt;

&lt;p&gt;解决方案概述：&lt;/p&gt;

&lt;p&gt;本文提出了一个较好的资源分割和定价的机制，以保证用户的：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;个体理性，保证每个用户都会参与拍卖&lt;/li&gt;
&lt;li&gt;不受嫉妒，保证拍卖完成后每个用户都不会因其他人的竞价而嫉妒&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Integrated Development of IoT Applications with OneLink(Demo)</title>
      <link>https://liborui.github.io/publication/guan-2019-demo/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0800</pubDate>
      
      <guid>https://liborui.github.io/publication/guan-2019-demo/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
